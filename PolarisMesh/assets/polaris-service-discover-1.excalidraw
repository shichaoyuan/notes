{
  "type": "excalidraw",
  "version": 2,
  "source": "http://localhost:3000",
  "elements": [
    {
      "id": "MAKf1MD_m5ouTlaiS3cAU",
      "type": "rectangle",
      "x": 403.13671875,
      "y": 924.203125,
      "width": 857,
      "height": 447,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "dotted",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1216917119,
      "version": 332,
      "versionNonce": 1429073119,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "lmls8K7doOYGrlf8l7ZRA"
        }
      ],
      "updated": 1647422845299,
      "link": null
    },
    {
      "id": "lmls8K7doOYGrlf8l7ZRA",
      "type": "text",
      "x": 408.13671875,
      "y": 929.203125,
      "width": 847,
      "height": 437,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 950122737,
      "version": 249,
      "versionNonce": 1091357247,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1647422812893,
      "link": null,
      "text": "// 转换为服务发现的请求对象\nfunc (s *serviceUpdateTask) toDiscoverRequest() *namingpb.DiscoverRequest {\n        var request = &namingpb.DiscoverRequest{\n                Type: pb.GetProtoRequestType(s.Type),\n                Service: &namingpb.Service{\n                        Name:      &wrappers.StringValue{Value: s.Service},\n                        Namespace: &wrappers.StringValue{Value: s.Namespace},\n                        Revision:  &wrappers.StringValue{Value: s.handler.GetRevision()},\n                        Business:  &wrappers.StringValue{Value: s.handler.GetBusiness()},\n                },\n                // 网格请求\n                MeshConfig: s.handler.GetMeshConfig(),\n                Mesh: &namingpb.Mesh{\n                        Id: &wrappers.StringValue{Value: s.Service},\n                },\n        }\n        if log.GetBaseLogger().IsLevelEnabled(log.DebugLog) {\n                reqJson, _ := (&jsonpb.Marshaler{}).MarshalToString(request)\n                log.GetBaseLogger().Debugf(\n                        \"discover request to send is %s\", reqJson)\n        }\n        return request\n}",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "middle",
      "baseline": 433,
      "containerId": "MAKf1MD_m5ouTlaiS3cAU",
      "originalText": "// 转换为服务发现的请求对象\nfunc (s *serviceUpdateTask) toDiscoverRequest() *namingpb.DiscoverRequest {\n        var request = &namingpb.DiscoverRequest{\n                Type: pb.GetProtoRequestType(s.Type),\n                Service: &namingpb.Service{\n                        Name:      &wrappers.StringValue{Value: s.Service},\n                        Namespace: &wrappers.StringValue{Value: s.Namespace},\n                        Revision:  &wrappers.StringValue{Value: s.handler.GetRevision()},\n                        Business:  &wrappers.StringValue{Value: s.handler.GetBusiness()},\n                },\n                // 网格请求\n                MeshConfig: s.handler.GetMeshConfig(),\n                Mesh: &namingpb.Mesh{\n                        Id: &wrappers.StringValue{Value: s.Service},\n                },\n        }\n        if log.GetBaseLogger().IsLevelEnabled(log.DebugLog) {\n                reqJson, _ := (&jsonpb.Marshaler{}).MarshalToString(request)\n                log.GetBaseLogger().Debugf(\n                        \"discover request to send is %s\", reqJson)\n        }\n        return request\n}"
    },
    {
      "id": "YvE1NQ8vu4rYgcZI_7Vsz",
      "type": "rectangle",
      "x": 1279.1484375,
      "y": 925.203125,
      "width": 1103,
      "height": 352,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "dotted",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 23077617,
      "version": 397,
      "versionNonce": 474765937,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "wGmgen17LZLouDYyFONR8"
        }
      ],
      "updated": 1647422847483,
      "link": null
    },
    {
      "id": "wGmgen17LZLouDYyFONR8",
      "type": "text",
      "x": 1284.1484375,
      "y": 930.203125,
      "width": 1093,
      "height": 342,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 940614655,
      "version": 378,
      "versionNonce": 1275972497,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1647422596190,
      "link": null,
      "text": "public void sendRequest(ServiceUpdateTask serviceUpdateTask) {\n    ServiceEventKey serviceEventKey = serviceUpdateTask.getServiceEventKey();\n    ServiceProto.Service.Builder builder = ServiceProto.Service.newBuilder();\n    builder.setName(StringValue.newBuilder().setValue(serviceEventKey.getServiceKey().getService()).build());\n    builder.setNamespace(StringValue.newBuilder().setValue(serviceEventKey.getServiceKey().getNamespace()).build());\n\n    RequestProto.DiscoverRequest.Builder req = RequestProto.DiscoverRequest.newBuilder();\n    req.setType(GrpcUtil.buildDiscoverRequestType(serviceEventKey.getEventType())); // switch\n    req.setService(builder);\n    if (serviceUpdateTask.getTaskType() == Type.FIRST) {\n        LOG.info(\"[ServerConnector]send request(id={}) to {} for service {}\", reqId, connection.getConnID(),\n                serviceEventKey);\n    } else {\n        LOG.debug(\"[ServerConnector]send request(id={}) to {} for service {}\", reqId, connection.getConnID(),\n                serviceEventKey);\n    }\n    discoverClient.onNext(req.build());\n}",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 338,
      "containerId": "YvE1NQ8vu4rYgcZI_7Vsz",
      "originalText": "public void sendRequest(ServiceUpdateTask serviceUpdateTask) {\n    ServiceEventKey serviceEventKey = serviceUpdateTask.getServiceEventKey();\n    ServiceProto.Service.Builder builder = ServiceProto.Service.newBuilder();\n    builder.setName(StringValue.newBuilder().setValue(serviceEventKey.getServiceKey().getService()).build());\n    builder.setNamespace(StringValue.newBuilder().setValue(serviceEventKey.getServiceKey().getNamespace()).build());\n\n    RequestProto.DiscoverRequest.Builder req = RequestProto.DiscoverRequest.newBuilder();\n    req.setType(GrpcUtil.buildDiscoverRequestType(serviceEventKey.getEventType())); // switch\n    req.setService(builder);\n    if (serviceUpdateTask.getTaskType() == Type.FIRST) {\n        LOG.info(\"[ServerConnector]send request(id={}) to {} for service {}\", reqId, connection.getConnID(),\n                serviceEventKey);\n    } else {\n        LOG.debug(\"[ServerConnector]send request(id={}) to {} for service {}\", reqId, connection.getConnID(),\n                serviceEventKey);\n    }\n    discoverClient.onNext(req.build());\n}"
    },
    {
      "id": "oVZDXiGqDUITYT5qURsn_",
      "type": "text",
      "x": 405.6796875,
      "y": 894.21484375,
      "width": 66,
      "height": 25,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 831418129,
      "version": 66,
      "versionNonce": 508729521,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1647422834290,
      "link": null,
      "text": "Golang",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Golang"
    },
    {
      "type": "text",
      "version": 155,
      "versionNonce": 1751009439,
      "isDeleted": false,
      "id": "L9RWuqBMZ2SdR-wGQettv",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1282.34765625,
      "y": 895.69921875,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 51,
      "height": 25,
      "seed": 407193311,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1647422841301,
      "link": null,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Java",
      "baseline": 18,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Java"
    },
    {
      "id": "xCmdLZcc2kIm_BAkaXui-",
      "type": "rectangle",
      "x": 625.90234375,
      "y": 1061.79296875,
      "width": 619.3125,
      "height": 21.91015625,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1189467249,
      "version": 92,
      "versionNonce": 1650763551,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1647422869382,
      "link": null
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}